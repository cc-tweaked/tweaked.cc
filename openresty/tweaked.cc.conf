set $latest_folder "mc-1.16.x";

# script-src:
#  - copy-cat.squiddev.cc
# img-src:
#  - cf.way2muchnoise.eu - Curse icon on /index.html
#  - copy-cat.squiddev.cc - Font files for emulator
# connect-src:
#  - copy-cat.squiddev.workers.dev - CORS proxy
#  - ws: wss: - Websockets aren't done through the normal proxy
more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' copy-cat.squiddev.cc; style-src 'self' 'unsafe-inline'; img-src 'self' cf.way2muchnoise.eu copy-cat.squiddev.cc; connect-src 'self' copy-cat.squiddev.workers.dev ws: wss:";

root /var/www/tweaked.cc;

# We technically support per-version documentation (though it is not currently
# usable in any way).
# Requests for non-versioned documentation use the latest version.
try_files $uri $uri/index.html
          /$latest_folder$uri /$latest_folder$uri/index.html
          =404;

location @find_page {
  # Several pages have been moved to a different location. We attempt to rewrite
  # to the appropriate place.
  access_by_lua_block {
    local pages = {
      ["/module/cc.completion.html"] = "/library/cc.completion.html",
      ["/module/cc.expect.html"] = "/library/cc.expect.html",
      ["/module/cc.image.nft.html"] = "/library/cc.image.nft",
      ["/module/cc.pretty.html"] = "/library/cc.pretty.html",
      ["/module/cc.require.html"] = "/library/cc.require.html",
      ["/module/cc.shell.completion.html"] = "/library/cc.shell.completion",
      ["/module/cc.strings.html"] = "/library/cc.strings.html",

      ["/module/command.html"] = "/peripheral/command.html",
      ["/module/computer.html"] = "/peripheral/computer.html",
      ["/module/drive.html"] = "/peripheral/drive.html",
      ["/module/modem.html"] = "/peripheral/modem.html",
      ["/module/monitor.html"] = "/peripheral/monitor.html",
      ["/module/printer.html"] = "/peripheral/printer.html",
      ["/module/speaker.html"] = "/peripheral/speaker.html",

      ["/module/energy_storage.html"] = "/generic_peripheral/energy_storage.html",
      ["/module/fluid_storage.html"] = "/generic_peripheral/fluid_storage.html",
      ["/module/inventory.html"] = "/generic_peripheral/inventory.html",
    }

    local redirect = pages[ngx.var.uri]
    if redirect then return ngx.redirect(redirect, ngx.HTTP_MOVED_PERMANENTLY) end

    return ngx.exec('/404.html')
  }
}

error_page 404 @find_page;
